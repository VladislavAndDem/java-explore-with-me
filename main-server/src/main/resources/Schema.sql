DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS location CASCADE;
DROP TABLE IF EXISTS categories CASCADE;
DROP TABLE IF EXISTS event CASCADE;
DROP TABLE IF EXISTS participation_request CASCADE;
DROP TABLE IF EXISTS compilations CASCADE;
DROP TABLE IF EXISTS compilation_event CASCADE;

CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  name VARCHAR(250) NOT NULL,
  email VARCHAR(254) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS location (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    lat FLOAT NOT NULL,
    lon FLOAT NOT NULL
);

CREATE TABLE IF NOT EXISTS categories (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS event (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  annotation VARCHAR(2000) NOT NULL,
  category_id BIGINT NOT NULL,
  description VARCHAR(7000) NOT NULL,
  event_date TIMESTAMP WITH TIME ZONE NOT NULL,
  paid BOOLEAN DEFAULT FALSE,
  participant_limit INTEGER DEFAULT 0,
  request_moderation BOOLEAN DEFAULT TRUE,
  title VARCHAR(120) NOT NULL,
  initiator_id BIGINT NOT NULL,
  state VARCHAR(20) NOT NULL DEFAULT 'PENDING',
  created_on TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
  published_on TIMESTAMP WITH TIME ZONE,
  location_id BIGINT NOT NULL,
  CONSTRAINT fk_category_event FOREIGN KEY (category_id) REFERENCES categories(id)
     ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT fk_initiator_event FOREIGN KEY (initiator_id) REFERENCES users(id)
     ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT fk_location_event FOREIGN KEY (location_id) REFERENCES location(id)
     ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS participation_request (
  id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL DEFAULT NOW(),
  event_id BIGINT NOT NULL,
  requester_id BIGINT NOT NULL,
  status VARCHAR(12) NOT NULL,
  CONSTRAINT fk_event_request FOREIGN KEY (event_id) REFERENCES event(id)
        ON UPDATE CASCADE ON DELETE CASCADE,
  CONSTRAINT fk_requester_request FOREIGN KEY (requester_id) REFERENCES users(id)
        ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS compilations (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    pinned BOOLEAN,
    title  varchar(50)
);

CREATE TABLE IF NOT EXISTS compilation_event (
    compilation_id BIGINT NOT NULL,
    event_id BIGINT NOT NULL,
    PRIMARY KEY (compilation_id, event_id),
    CONSTRAINT fk_compilation_event_compilations
        FOREIGN KEY (compilation_id) REFERENCES compilations(id)
        ON UPDATE CASCADE
        ON DELETE CASCADE,
    CONSTRAINT fk_compilation_event_event
        FOREIGN KEY (event_id) REFERENCES event(id)
        ON UPDATE CASCADE
        ON DELETE CASCADE
);